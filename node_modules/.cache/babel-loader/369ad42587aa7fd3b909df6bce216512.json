{"ast":null,"code":"'use strict';\n\nconst ResourceBase = require('./resourceBase');\n\nclass Addresses extends ResourceBase {\n  constructor(config) {\n    super('addresses', config);\n  }\n\n  list(options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    return this._transmit('GET', null, options, null, callback);\n  }\n\n  retrieve(id, callback) {\n    return this._transmit('GET', id, null, null, callback);\n  }\n\n  delete(id, callback) {\n    return this._transmit('DELETE', id, null, null, callback);\n  }\n\n  create(params, callback) {\n    return this._transmit('POST', null, null, params, callback);\n  }\n\n}\n\nmodule.exports = Addresses;","map":{"version":3,"sources":["/Users/isaac/Downloads/react_spa/node_modules/lob/lib/resources/addresses.js"],"names":["ResourceBase","require","Addresses","constructor","config","list","options","callback","_transmit","retrieve","id","delete","create","params","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B;;AAEA,MAAMC,SAAN,SAAwBF,YAAxB,CAAqC;AAEnCG,EAAAA,WAAW,CAAEC,MAAF,EAAU;AACnB,UAAM,WAAN,EAAmBA,MAAnB;AACD;;AAEDC,EAAAA,IAAI,CAAEC,OAAF,EAAWC,QAAX,EAAqB;AACvB,QAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,MAAAA,QAAQ,GAAGD,OAAX;AACAA,MAAAA,OAAO,GAAG,EAAV;AACD;;AAED,WAAO,KAAKE,SAAL,CAAe,KAAf,EAAsB,IAAtB,EAA4BF,OAA5B,EAAqC,IAArC,EAA2CC,QAA3C,CAAP;AACD;;AAEDE,EAAAA,QAAQ,CAAEC,EAAF,EAAMH,QAAN,EAAgB;AACtB,WAAO,KAAKC,SAAL,CAAe,KAAf,EAAsBE,EAAtB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsCH,QAAtC,CAAP;AACD;;AAEDI,EAAAA,MAAM,CAAED,EAAF,EAAMH,QAAN,EAAgB;AACpB,WAAO,KAAKC,SAAL,CAAe,QAAf,EAAyBE,EAAzB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyCH,QAAzC,CAAP;AACD;;AAEDK,EAAAA,MAAM,CAAEC,MAAF,EAAUN,QAAV,EAAoB;AACxB,WAAO,KAAKC,SAAL,CAAe,MAAf,EAAuB,IAAvB,EAA6B,IAA7B,EAAmCK,MAAnC,EAA2CN,QAA3C,CAAP;AACD;;AAzBkC;;AA6BrCO,MAAM,CAACC,OAAP,GAAiBb,SAAjB","sourcesContent":["'use strict';\n\nconst ResourceBase = require('./resourceBase');\n\nclass Addresses extends ResourceBase {\n\n  constructor (config) {\n    super('addresses', config);\n  }\n\n  list (options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    return this._transmit('GET', null, options, null, callback);\n  }\n\n  retrieve (id, callback) {\n    return this._transmit('GET', id, null, null, callback);\n  }\n\n  delete (id, callback) {\n    return this._transmit('DELETE', id, null, null, callback);\n  }\n\n  create (params, callback) {\n    return this._transmit('POST', null, null, params, callback);\n  }\n\n}\n\nmodule.exports = Addresses;\n"]},"metadata":{},"sourceType":"script"}