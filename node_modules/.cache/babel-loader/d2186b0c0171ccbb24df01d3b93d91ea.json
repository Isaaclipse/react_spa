{"ast":null,"code":"'use strict';\n\nconst Bluebird = require('bluebird');\n\nconst Request = require('request');\n\nconst Stream = require('stream');\n\nclass ResourceBase {\n  constructor(endpoint, config) {\n    this.uri = `${config.options.host}${endpoint}`;\n    this.config = config.options;\n  }\n\n  _transmit(method, uri, qs, form, headers, callback) {\n    if (typeof headers === 'function') {\n      callback = headers;\n      headers = {};\n    } else {\n      headers = headers || {};\n    }\n\n    const allHeaders = Object.assign({}, this.config.headers, headers);\n    const opts = {\n      url: `${this.uri}${uri ? `/${uri}` : ''}`,\n      method,\n      auth: {\n        user: this.config.apiKey,\n        password: ''\n      },\n      headers: allHeaders,\n      json: true\n    };\n\n    if (this.config.agent) {\n      opts.agent = this.config.agent;\n    }\n\n    let isMultiPartForm = false;\n\n    for (const key in form) {\n      if (form[key] === undefined) {\n        delete form[key];\n      }\n\n      if (form[key] === true || form[key] === false) {\n        form[key] = form[key].toString();\n      }\n    }\n\n    for (const param in form) {\n      const val = form[param];\n\n      if (val instanceof Stream.Stream) {\n        isMultiPartForm = true;\n        break;\n      }\n\n      if (val !== undefined && val !== null && Object.prototype.hasOwnProperty.call(val, 'value')) {\n        isMultiPartForm = true;\n        break;\n      }\n    }\n\n    if (qs) {\n      opts.qs = qs;\n    }\n\n    if (form) {\n      if (isMultiPartForm) {\n        opts.formData = form;\n      } else {\n        opts.form = form;\n      }\n    }\n\n    return new Bluebird((resolve, reject) => {\n      Request(opts, (err, resp, body) => {\n        body = body || {};\n        /* istanbul ignore next */\n\n        if (err) {\n          return reject(err);\n        }\n\n        if (body && body.error) {\n          const error = new Error(body.error.message);\n          error.status_code = body.error.status_code;\n          error._response = resp;\n          return reject(error);\n        }\n\n        if (resp && resp.statusCode >= 500) {\n          const error = new Error(resp.statusMessage);\n          error.status_code = resp.statusCode;\n          error._response = resp;\n          return reject(error);\n        }\n\n        Object.defineProperty(body, '_response', {\n          enumerable: false,\n          writable: false,\n          value: resp\n        });\n        return resolve(body);\n      });\n    }).nodeify(callback);\n  }\n\n}\n\nmodule.exports = ResourceBase;","map":{"version":3,"sources":["/Users/isaac/Downloads/react_spa/node_modules/lob/lib/resources/resourceBase.js"],"names":["Bluebird","require","Request","Stream","ResourceBase","constructor","endpoint","config","uri","options","host","_transmit","method","qs","form","headers","callback","allHeaders","Object","assign","opts","url","auth","user","apiKey","password","json","agent","isMultiPartForm","key","undefined","toString","param","val","prototype","hasOwnProperty","call","formData","resolve","reject","err","resp","body","error","Error","message","status_code","_response","statusCode","statusMessage","defineProperty","enumerable","writable","value","nodeify","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Bluebird = require('bluebird');\nconst Request  = require('request');\nconst Stream   = require('stream');\n\nclass ResourceBase {\n\n  constructor (endpoint, config) {\n    this.uri = `${config.options.host}${endpoint}`;\n    this.config = config.options;\n  }\n\n  _transmit (method, uri, qs, form, headers, callback) {\n    if (typeof headers === 'function') {\n      callback = headers;\n      headers = {};\n    } else {\n      headers = headers || {};\n    }\n\n    const allHeaders = Object.assign({}, this.config.headers, headers);\n\n    const opts = {\n      url: `${this.uri}${uri ? `/${uri}` : ''}`,\n      method,\n      auth: { user: this.config.apiKey, password: '' },\n      headers: allHeaders,\n      json: true\n    };\n\n    if (this.config.agent) {\n      opts.agent = this.config.agent;\n    }\n\n    let isMultiPartForm = false;\n\n    for (const key in form) {\n      if (form[key] === undefined) {\n        delete form[key];\n      }\n      if (form[key] === true || form[key] === false) {\n        form[key] = form[key].toString();\n      }\n    }\n\n    for (const param in form) {\n      const val = form[param];\n\n      if (val instanceof Stream.Stream) {\n        isMultiPartForm = true;\n        break;\n      }\n\n      if (val !== undefined && val !== null && Object.prototype.hasOwnProperty.call(val, 'value')) {\n        isMultiPartForm = true;\n        break;\n      }\n    }\n\n    if (qs) {\n      opts.qs = qs;\n    }\n\n    if (form) {\n      if (isMultiPartForm) {\n        opts.formData = form;\n      } else {\n        opts.form = form;\n      }\n    }\n\n    return new Bluebird((resolve, reject) => {\n      Request(opts, (err, resp, body) => {\n        body = body || {};\n\n        /* istanbul ignore next */\n        if (err) {\n          return reject(err);\n        }\n\n        if (body && body.error) {\n          const error = new Error(body.error.message);\n          error.status_code = body.error.status_code;\n          error._response = resp;\n          return reject(error);\n        }\n\n        if (resp && resp.statusCode >= 500) {\n          const error = new Error(resp.statusMessage);\n          error.status_code = resp.statusCode;\n          error._response = resp;\n          return reject(error);\n        }\n\n        Object.defineProperty(body, '_response', {\n          enumerable: false,\n          writable: false,\n          value: resp\n        });\n\n        return resolve(body);\n      });\n    }).nodeify(callback);\n  }\n\n}\n\nmodule.exports = ResourceBase;\n"]},"metadata":{},"sourceType":"script"}