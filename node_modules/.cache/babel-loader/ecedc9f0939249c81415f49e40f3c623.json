{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/isaac/Downloads/react_spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/isaac/Downloads/react_spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/isaac/Downloads/react_spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/isaac/Downloads/react_spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar ResourceBase = require('./resourceBase');\n\nvar Postcards = /*#__PURE__*/function (_ResourceBase) {\n  _inherits(Postcards, _ResourceBase);\n\n  var _super = _createSuper(Postcards);\n\n  function Postcards(config) {\n    _classCallCheck(this, Postcards);\n\n    return _super.call(this, 'postcards', config);\n  }\n\n  _createClass(Postcards, [{\n    key: \"list\",\n    value: function list(options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      return this._transmit('GET', null, options, null, callback);\n    }\n  }, {\n    key: \"retrieve\",\n    value: function retrieve(id, callback) {\n      return this._transmit('GET', id, null, null, callback);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id, callback) {\n      return this._transmit('DELETE', id, null, null, callback);\n    }\n  }, {\n    key: \"create\",\n    value: function create(params, headers, callback) {\n      var isBuffer;\n\n      if (params.front) {\n        isBuffer = Buffer.isBuffer(params.front);\n\n        if (isBuffer) {\n          params.front = {\n            value: params.front,\n            options: {\n              filename: 'front.pdf'\n            }\n          };\n        }\n      }\n\n      if (params.back) {\n        isBuffer = Buffer.isBuffer(params.back);\n\n        if (isBuffer) {\n          params.back = {\n            value: params.back,\n            options: {\n              filename: 'back.pdf'\n            }\n          };\n        }\n      }\n\n      for (var p in params) {\n        if (p === 'merge_variables' && params[p] instanceof Object) {\n          params[p] = JSON.stringify(params[p]);\n        }\n\n        if (p === 'front' || p === 'back' || !(params[p] instanceof Object)) {\n          continue;\n        }\n\n        for (var key in params[p]) {\n          params[\"\".concat(p, \"[\").concat(key, \"]\")] = params[p][key];\n        }\n\n        delete params[p];\n      }\n\n      return this._transmit('POST', null, null, params, headers, callback);\n    }\n  }]);\n\n  return Postcards;\n}(ResourceBase);\n\nmodule.exports = Postcards;","map":{"version":3,"sources":["/Users/isaac/Downloads/react_spa/node_modules/lob/lib/resources/postcards.js"],"names":["ResourceBase","require","Postcards","config","options","callback","_transmit","id","params","headers","isBuffer","front","Buffer","value","filename","back","p","Object","JSON","stringify","key","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B;;IAEMC,S;;;;;AAEJ,qBAAaC,MAAb,EAAqB;AAAA;;AAAA,6BACb,WADa,EACAA,MADA;AAEpB;;;;WAED,cAAMC,OAAN,EAAeC,QAAf,EAAyB;AAEvB,UAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,QAAAA,QAAQ,GAAGD,OAAX;AACAA,QAAAA,OAAO,GAAG,EAAV;AACD;;AAED,aAAO,KAAKE,SAAL,CAAe,KAAf,EAAsB,IAAtB,EAA4BF,OAA5B,EAAqC,IAArC,EAA2CC,QAA3C,CAAP;AACD;;;WAED,kBAAUE,EAAV,EAAcF,QAAd,EAAwB;AACtB,aAAO,KAAKC,SAAL,CAAe,KAAf,EAAsBC,EAAtB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsCF,QAAtC,CAAP;AACD;;;WAED,iBAAQE,EAAR,EAAYF,QAAZ,EAAsB;AACpB,aAAO,KAAKC,SAAL,CAAe,QAAf,EAAyBC,EAAzB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyCF,QAAzC,CAAP;AACD;;;WAED,gBAAQG,MAAR,EAAgBC,OAAhB,EAAyBJ,QAAzB,EAAmC;AAEjC,UAAIK,QAAJ;;AAEA,UAAIF,MAAM,CAACG,KAAX,EAAkB;AAChBD,QAAAA,QAAQ,GAAGE,MAAM,CAACF,QAAP,CAAgBF,MAAM,CAACG,KAAvB,CAAX;;AAEA,YAAID,QAAJ,EAAc;AACZF,UAAAA,MAAM,CAACG,KAAP,GAAe;AACbE,YAAAA,KAAK,EAAEL,MAAM,CAACG,KADD;AAEbP,YAAAA,OAAO,EAAE;AAAEU,cAAAA,QAAQ,EAAE;AAAZ;AAFI,WAAf;AAID;AACF;;AAED,UAAIN,MAAM,CAACO,IAAX,EAAiB;AACfL,QAAAA,QAAQ,GAAGE,MAAM,CAACF,QAAP,CAAgBF,MAAM,CAACO,IAAvB,CAAX;;AAEA,YAAIL,QAAJ,EAAc;AACZF,UAAAA,MAAM,CAACO,IAAP,GAAc;AACZF,YAAAA,KAAK,EAAEL,MAAM,CAACO,IADF;AAEZX,YAAAA,OAAO,EAAE;AAAEU,cAAAA,QAAQ,EAAE;AAAZ;AAFG,WAAd;AAID;AACF;;AAED,WAAK,IAAME,CAAX,IAAgBR,MAAhB,EAAwB;AAEtB,YAAIQ,CAAC,KAAK,iBAAN,IAA2BR,MAAM,CAACQ,CAAD,CAAN,YAAqBC,MAApD,EAA4D;AAC1DT,UAAAA,MAAM,CAACQ,CAAD,CAAN,GAAYE,IAAI,CAACC,SAAL,CAAeX,MAAM,CAACQ,CAAD,CAArB,CAAZ;AACD;;AAED,YAAIA,CAAC,KAAK,OAAN,IAAiBA,CAAC,KAAK,MAAvB,IAAiC,EAAER,MAAM,CAACQ,CAAD,CAAN,YAAqBC,MAAvB,CAArC,EAAqE;AACnE;AACD;;AAED,aAAK,IAAMG,GAAX,IAAkBZ,MAAM,CAACQ,CAAD,CAAxB,EAA6B;AAC3BR,UAAAA,MAAM,WAAIQ,CAAJ,cAASI,GAAT,OAAN,GAAyBZ,MAAM,CAACQ,CAAD,CAAN,CAAUI,GAAV,CAAzB;AACD;;AAED,eAAOZ,MAAM,CAACQ,CAAD,CAAb;AACD;;AAED,aAAO,KAAKV,SAAL,CAAe,MAAf,EAAuB,IAAvB,EAA6B,IAA7B,EAAmCE,MAAnC,EAA2CC,OAA3C,EAAoDJ,QAApD,CAAP;AACD;;;;EApEqBL,Y;;AAwExBqB,MAAM,CAACC,OAAP,GAAiBpB,SAAjB","sourcesContent":["'use strict';\n\nconst ResourceBase = require('./resourceBase');\n\nclass Postcards extends ResourceBase {\n\n  constructor (config) {\n    super('postcards', config);\n  }\n\n  list (options, callback) {\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    return this._transmit('GET', null, options, null, callback);\n  }\n\n  retrieve (id, callback) {\n    return this._transmit('GET', id, null, null, callback);\n  }\n\n  delete (id, callback) {\n    return this._transmit('DELETE', id, null, null, callback);\n  }\n\n  create (params, headers, callback) {\n\n    let isBuffer;\n\n    if (params.front) {\n      isBuffer = Buffer.isBuffer(params.front);\n\n      if (isBuffer) {\n        params.front = {\n          value: params.front,\n          options: { filename: 'front.pdf' }\n        };\n      }\n    }\n\n    if (params.back) {\n      isBuffer = Buffer.isBuffer(params.back);\n\n      if (isBuffer) {\n        params.back = {\n          value: params.back,\n          options: { filename: 'back.pdf' }\n        };\n      }\n    }\n\n    for (const p in params) {\n\n      if (p === 'merge_variables' && params[p] instanceof Object) {\n        params[p] = JSON.stringify(params[p]);\n      }\n\n      if (p === 'front' || p === 'back' || !(params[p] instanceof Object)) {\n        continue;\n      }\n\n      for (const key in params[p]) {\n        params[`${p}[${key}]`] = params[p][key];\n      }\n\n      delete params[p];\n    }\n\n    return this._transmit('POST', null, null, params, headers, callback);\n  }\n\n}\n\nmodule.exports = Postcards;\n"]},"metadata":{},"sourceType":"script"}